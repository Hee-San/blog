<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on へーさんのブログ</title>
    <link>https://hee-san.github.io/blog/tags/python/</link>
    <description>Recent content in python on へーさんのブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Apr 2019 23:10:44 +0900</lastBuildDate>
    
        <atom:link href="https://hee-san.github.io/blog/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>元号変換プログラム</title>
      <link>https://hee-san.github.io/blog/2019/%E5%85%83%E5%8F%B7%E5%A4%89%E6%8F%9B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0/</link>
      <pubDate>Tue, 16 Apr 2019 23:10:44 +0900</pubDate>
      
      <guid>https://hee-san.github.io/blog/2019/%E5%85%83%E5%8F%B7%E5%A4%89%E6%8F%9B%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0/</guid>
      <description>年の西暦表記・元号表記を相互に変換するようなプログラムを作成します。
テスト書いていますか？ いきなり元号と関係のない話なんですが。
身の回りでテストコードをちゃんと書いている友人がいません。 悲しいです。書きましょう。
僕は、テストには以下のようなメリットがあると思います。
 動作が保証されること サンプルとして、使い方が簡単にわかること  同期の友人は研究室へ入るこの機に、ぜひテストやドキュメントを書く習慣をつけてほしいです。
この記事ではさらに踏み込んで、TDD（テスト駆動開発）を行います。
これは、メインプログラムより先にテストコードを書いちゃう開発手法です。
先に目標の動作を明記するので、開発する上で目標を見失うこともないです。
他にもメリットがたくさんあるんですが、それはまたの機会に書こうと思います。
開発環境 Pythonを使います。（今回の例では）簡潔なコードで済み、テストの用意が簡単だから選びました。
初めのうちは、外部ライブラリ等は利用しない予定です。
テストには、標準ライブラリのdoctestを使います。
2020年は令和2年 何はともあれ、まずはテストを書きます。
はじめに、「西暦を令和に変換できる」という仕様を満たしたいです。 「1年は元年とする」や「昭和・平成にも変換可能にする」等は後回しです。
 以下、執筆中</description>
    </item>
    
  </channel>
</rss>
